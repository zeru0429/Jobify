name: Deploy Next.js Project to CPanel
on:
  push:
    branches:
      - main # Deploy on push to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Specify the Node.js version

      # ========================== FRONTEND BUILD ========================== #
      # Step 3: Install Frontend Dependencies
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install --legacy-peer-deps

      # Step 4: Build Frontend Project
      - name: Build Frontend
        run: |
          cd frontend
          npm run build
        env:
          VITE_REACT_APP_PUBLIC_API_URL: https://jobify.api.huludelala.com/
          VITE_REACT_APP_SERVER_URL: https://jobify.api.huludelala.com/
          VITE_GEMINI_BASE_URL: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent
          VITE_API_KEY: AIzaSyD_y54LwZb2fKeOwpyuW9eu_Zlzj2aLUg4

      # Step 5: Archive Frontend Build
      - name: Archive Frontend Build Folder
        run: tar -czf frontend.tar.gz -C frontend/dist .

      # ========================== BACKEND BUILD ========================== #
      # Step 6: Install Backend Dependencies
      - name: Install Backend Dependencies
        run: |
          cd backend
          npm install --legacy-peer-deps

      # Step 7: Build Backend (TypeScript â†’ JavaScript)
      - name: Build Backend
        run: |
          cd backend
          npm run build
        env:
          PORT: 6565
          MONGO_URI: mongodb+srv://zeru:BPhgUEtbWZDcbfSS@cluster0.yiex2.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
          JWT_SECRET: tsehay
          BASE_URL: https://cms.kiyatilahun.com/api/form/contacts
          GEMINI_API_KEY: AIzaSyDw2MmHnzvv7wwak0zUJC3CdQUSQUcdUag
          CLOUD_API_KEY: 581891482999266
          CLOUD_API_SECRET: OYTQBlN2OaWAQyB7RggmtYTvOAE
          CLOUD_NAME: demxdya38
          CLOUDINARY_URL: cloudinary://581891482999266:OYTQBlN2OaWAQyB7RggmtYTvOAE@demxdya38

      # Step 8: Archive Backend Build Folder (Excluding node_modules)
      - name: Archive Backend Build Folder
        run: |
          cd backend
          tar --exclude='node_modules' -czf backend.tar.gz -C dist .

      # ========================== DEPLOYMENT ========================== #
      # Step 9: Deploy Frontend via FTP
      - name: Deploy Frontend via FTP
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ftp.huludelala.com
          username: frontend@versalinkfe.huludelala.com
          password: OpenAi@2023
          local-dir: frontend/dist/

      # - name: Deploy Backend via SSH
      #   env:
      #     SSH_USERNAME: huludeig
      #     SSH_HOST: 185.73.8.1
      #     SSH_PORT: 22
      #     REMOTE_PATH: ~/jobify.api.huludelala.com/
      #   run: |
      #     # Ensure the SSH key is available
      #     echo "${{ secrets.SSH_PRIVATE }}" > private_key.pem
      #     chmod 600 private_key.pem

      #     # List backend directory to verify the file exists
      #     ls -la backend

      #     # Transfer backend build to server
      #     scp -i private_key.pem -P "$SSH_PORT" ./backend/backend.tar.gz $SSH_USERNAME@$SSH_HOST:$REMOTE_PATH

      #     # Extract backend files and restart server
      #     ssh -i private_key.pem -p "$SSH_PORT" -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST "
      #       cd $REMOTE_PATH &&
      #       tar -xzf backend.tar.gz &&
      #       pm2 restart backend-app || pm2 start dist/server.js --name backend-app
      #     "

      #     # Clean up the private key
      #     rm -f private_key.pem
